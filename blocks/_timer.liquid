<div
  class="offer-time-container"
  data-start-days="{{ section.settings.days }}"
  data-start-hours="{{ section.settings.hours }}"
  data-start-minutes="{{ section.settings.minutes }}"
  data-start-seconds="{{ section.settings.seconds }}"
>
  <div class="offer-time-card">
    <p class="offer-time days">00</p>
    <p class="offer-valid">Days</p>
  </div>
  <div class="offer-time-card">
    <p class="offer-time hours">00</p>
    <p class="offer-valid">Hours</p>
  </div>
  <div class="offer-time-card">
    <p class="offer-time minutes">00</p>
    <p class="offer-valid">Min</p>
  </div>
  <div class="offer-time-card">
    <p class="offer-time seconds">00</p>
    <p class="offer-valid">Sec</p>
  </div>
</div>

<style>
  .offer-time {
    display: flex;
  }
  .offer-time-card {
    width: 160px;
    height: 96px;
    border: 1px solid #553E39;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .offer-time {
    font-size: 32px;
    font-weight: 700;
    margin-bottom: 0 !important;
  }
  .offer-valid {
    font-size: 16px;
    font-weight: 600;
    color: #A67E69;
    margin-top: 0 !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  const timerEl = document.querySelector('.offer-time-container');
  if (!timerEl) return;

  const storageKey = 'offerTimerEndTime';

  // Check if we already have an end time saved
  let endTime = localStorage.getItem(storageKey);

  if (!endTime) {
    // Get starting values from theme editor
    const totalSeconds =
      (parseInt(timerEl.dataset.startDays, 10) || 0) * 86400 +
      (parseInt(timerEl.dataset.startHours, 10) || 0) * 3600 +
      (parseInt(timerEl.dataset.startMinutes, 10) || 0) * 60 +
      (parseInt(timerEl.dataset.startSeconds, 10) || 0);

    // Calculate end time based on now
    endTime = Date.now() + totalSeconds * 1000;
    localStorage.setItem(storageKey, endTime);
  } else {
    endTime = parseInt(endTime, 10);
  }

  function updateTimer() {
    const now = Date.now();
    let remaining = Math.floor((endTime - now) / 1000);

    if (remaining <= 0) {
      remaining = 0;
      localStorage.removeItem(storageKey); // reset for next time
    }

    const days = Math.floor(remaining / 86400);
    const hours = Math.floor((remaining % 86400) / 3600);
    const minutes = Math.floor((remaining % 3600) / 60);
    const seconds = remaining % 60;

    timerEl.querySelector('.days').textContent = String(days).padStart(2, '0');
    timerEl.querySelector('.hours').textContent = String(hours).padStart(2, '0');
    timerEl.querySelector('.minutes').textContent = String(minutes).padStart(2, '0');
    timerEl.querySelector('.seconds').textContent = String(seconds).padStart(2, '0');

    if (remaining > 0) {
      setTimeout(updateTimer, 1000);
    }
  }

  updateTimer();
});

</script>

{% schema %}
{
  "name": "Offer Countdown Timer",
  "settings": [
    {
      "type": "number",
      "id": "days",
      "label": "Days",
      "default": 0
    },
    {
      "type": "number",
      "id": "hours",
      "label": "Hours",
      "default": 0
    },
    {
      "type": "number",
      "id": "minutes",
      "label": "Minutes",
      "default": 0
    },
    {
      "type": "number",
      "id": "seconds",
      "label": "Seconds",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Countdown Timer"
    }
  ]
}
{% endschema %}
